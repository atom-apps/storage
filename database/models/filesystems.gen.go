// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package models

import (
	"time"

	"github.com/atom-apps/storage/common"
	"gorm.io/gorm"
	"gorm.io/gorm/schema"
)

const TableNameFilesystem = "filesystems"

// Filesystem mapped from table <filesystems>
type Filesystem struct {
	ID        uint64                    `gorm:"column:id;type:bigint unsigned;primaryKey;autoIncrement:true;comment:ID" json:"id"`      // ID
	CreatedAt time.Time                 `gorm:"column:created_at;type:datetime(3);comment:创建时间" json:"created_at"`                      // 创建时间
	UpdatedAt time.Time                 `gorm:"column:updated_at;type:datetime(3);comment:更新时间" json:"updated_at"`                      // 更新时间
	DeletedAt gorm.DeletedAt            `gorm:"column:deleted_at;type:datetime(3);comment:删除时间" json:"deleted_at" swaggertype:"string"` // 删除时间
	TenantID  uint64                    `gorm:"column:tenant_id;type:bigint unsigned;comment:租户ID" json:"tenant_id"`                    // 租户ID
	UserID    uint64                    `gorm:"column:user_id;type:bigint unsigned;comment:用户ID" json:"user_id"`                        // 用户ID
	DriverID  uint64                    `gorm:"column:driver_id;type:bigint unsigned;comment:驱动" json:"driver_id"`                      // 驱动
	Filename  string                    `gorm:"column:filename;type:varchar(128);not null;comment:文件名" json:"filename"`                 // 文件名
	RealName  string                    `gorm:"column:real_name;type:varchar(128);not null;comment:真实文件名" json:"real_name"`             // 真实文件名
	Type      uint32                    `gorm:"column:type;type:tinyint unsigned;not null;comment:类型" json:"type"`                      // 类型
	ParentID  uint64                    `gorm:"column:parent_id;type:bigint unsigned;comment:父级ID" json:"parent_id"`                    // 父级ID
	Status    uint32                    `gorm:"column:status;type:tinyint unsigned;comment:状态" json:"status"`                           // 状态
	Mime      string                    `gorm:"column:mime;type:varchar(128);comment:MIME" json:"mime"`                                 // MIME
	Ext       string                    `gorm:"column:ext;type:varchar(32);comment:后缀名" json:"ext"`                                     // 后缀名
	Size      uint64                    `gorm:"column:size;type:bigint unsigned;comment:文件大小" json:"size"`                              // 文件大小
	Md5       string                    `gorm:"column:md5;type:varchar(32);comment:MD5" json:"md5"`                                     // MD5
	ShareUUID string                    `gorm:"column:share_uuid;type:varchar(64);comment:共享ID" json:"share_uuid"`                      // 共享ID
	Metadata  common.FilesystemMetadata `gorm:"column:metadata;type:longblob;comment:元数据" json:"metadata"`                              // 元数据
}

func (*Filesystem) TableName(namer schema.Namer) string {
	if namer == nil {
		return TableNameFilesystem
	}
	return namer.TableName(TableNameFilesystem)
}
